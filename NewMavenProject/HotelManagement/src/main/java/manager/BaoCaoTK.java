package manager;

import java.util.*;
import object.HoaDon;
import object.Phong;

public class BaoCaoTK {
    private List<HoaDon> hoaDons;
    private List<Phong> danhSachPhong;

    public BaoCaoTK(List<HoaDon> hoaDons, List<Phong> danhSachPhong) {
        this.hoaDons = hoaDons;
        this.danhSachPhong = danhSachPhong;
    }

    //  1. Th·ªëng k√™ doanh thu t·ª´ danh s√°ch h√≥a ƒë∆°n
    public double thongKeDoanhThu() {
        double doanhThu = 0;
        for (HoaDon hoaDon : hoaDons) {
            doanhThu += hoaDon.getTongTien();
        }
        return doanhThu;
    }

    //  2. ƒê·∫øm s·ªë ph√≤ng ƒë√£ ƒë·∫∑t (ch·ªâ t√≠nh ph√≤ng c√≥ tr·∫°ng th√°i "ƒê√£ ƒë·∫∑t")
    public int soPhongDaDat() {
        int count = 0;
        for (Phong phong : danhSachPhong) {
            if ("ƒê√£ ƒë·∫∑t".equalsIgnoreCase(phong.getTrangThai())) {
                count++;
            }
        }
        return count;
    }

    //  3. T√¨m danh s√°ch kh√°ch h√†ng VIP (top 5 kh√°ch chi ti√™u nhi·ªÅu nh·∫•t)
    public List<String> timKhachHangVIP() {
        Map<String, Double> tongChiTieu = new HashMap<>();

        for (HoaDon hoaDon : hoaDons) {
            String maKH = hoaDon.getMaKH();
            double tongTien = hoaDon.getTongTien();
            tongChiTieu.put(maKH, tongChiTieu.getOrDefault(maKH, 0.0) + tongTien);
        }

        // S·∫Øp x·∫øp danh s√°ch theo t·ªïng ti·ªÅn chi ti√™u gi·∫£m d·∫ßn
        List<Map.Entry<String, Double>> sortedList = new ArrayList<>(tongChiTieu.entrySet());
        sortedList.sort((a, b) -> Double.compare(b.getValue(), a.getValue()));

        // L·∫•y top 5 kh√°ch h√†ng VIP
        List<String> danhSachVIP = new ArrayList<>();
        for (int i = 0; i < Math.min(5, sortedList.size()); i++) {
            danhSachVIP.add(sortedList.get(i).getKey() + " (T·ªïng chi ti√™u: " + sortedList.get(i).getValue() + ")");
        }

        return danhSachVIP;
    }

    //  4. Ph√¢n t√≠ch xu h∆∞·ªõng ƒë·∫∑t ph√≤ng theo lo·∫°i ph√≤ng
    public String phanTichXuHuongDatPhong() {
        Map<String, Integer> loaiPhongCount = new HashMap<>();

        for (Phong phong : danhSachPhong) {
            String loaiPhong = phong.getLoaiPhong();
            loaiPhongCount.put(loaiPhong, loaiPhongCount.getOrDefault(loaiPhong, 0) + 1);
        }

        String xuHuong = "Kh√¥ng c√≥ xu h∆∞·ªõng r√µ r√†ng.";
        int maxCount = 0;
        for (Map.Entry<String, Integer> entry : loaiPhongCount.entrySet()) {
            if (entry.getValue() > maxCount) {
                maxCount = entry.getValue();
                xuHuong = "Lo·∫°i ph√≤ng ƒë∆∞·ª£c ƒë·∫∑t nhi·ªÅu nh·∫•t: " + entry.getKey();
            }
        }

        return xuHuong;
    }

    //  5. Xu·∫•t b√°o c√°o chi ti·∫øt
    public void hienThiBaoCao() {
        System.out.println(" B√ÅO C√ÅO TH·ªêNG K√ä KH√ÅCH S·∫†N üìä");
        System.out.println("--------------------------------------------------");
        System.out.println(" T·ªïng doanh thu: " + thongKeDoanhThu() + " VND");
        System.out.println(" S·ªë ph√≤ng ƒë√£ ƒë·∫∑t: " + soPhongDaDat());
        System.out.println(" Danh s√°ch kh√°ch h√†ng VIP:");
        for (String khachVIP : timKhachHangVIP()) {
            System.out.println("   - " + khachVIP);
        }
        System.out.println(" " + phanTichXuHuongDatPhong());
        System.out.println("--------------------------------------------------");
    }
}
